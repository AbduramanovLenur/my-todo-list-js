@charset "UTF-8";
/*!
 * ress.css â€¢ v4.0.0
 * MIT License
 * github.com/filipelinhares/ress
 */
/* # =================================================================
   # Global selectors
   # ================================================================= */
@import url("https://fonts.googleapis.com/css2?family=Inconsolata:wght@300&family=Roboto+Slab:wght@700&display=swap");
html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  /* Prevent adjustments of font size after orientation changes in iOS */
  word-break: normal;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
}

*,
::before,
::after {
  background-repeat: no-repeat;
  /* Set `background-repeat: no-repeat` to all elements and pseudo elements */
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}

::before,
::after {
  text-decoration: inherit;
  /* Inherit text-decoration and vertical align to ::before and ::after pseudo elements */
  vertical-align: inherit;
}

* {
  padding: 0;
  /* Reset `padding` and `margin` of all elements */
  margin: 0;
}

/* # =================================================================
   # General elements
   # ================================================================= */
hr {
  overflow: visible;
  /* Show the overflow in Edge and IE */
  height: 0;
  /* Add the correct box sizing in Firefox */
  color: inherit;
  /* Correct border color in Firefox. */
}

details,
main {
  display: block;
  /* Render the `main` element consistently in IE. */
}

summary {
  display: list-item;
  /* Add the correct display in all browsers */
}

small {
  font-size: 80%;
  /* Set font-size to 80% in `small` elements */
}

[hidden] {
  display: none;
  /* Add the correct display in IE */
}

abbr[title] {
  border-bottom: none;
  /* Remove the bottom border in Chrome 57 */
  /* Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari */
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

a {
  background-color: transparent;
  /* Remove the gray background on active links in IE 10 */
}

a:active,
a:hover {
  outline-width: 0;
  /* Remove the outline when hovering in all browsers */
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* Specify the font family of code elements */
}

pre {
  font-size: 1em;
  /* Correct the odd `em` font sizing in all browsers */
}

b,
strong {
  font-weight: bolder;
  /* Add the correct font weight in Chrome, Edge, and Safari */
}

/* https://gist.github.com/unruthless/413930 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

table {
  border-color: inherit;
  /* Correct border color in all Chrome, Edge, and Safari. */
  text-indent: 0;
  /* Remove text indentation in Chrome, Edge, and Safari */
}

/* # =================================================================
   # Forms
   # ================================================================= */
input {
  border-radius: 0;
}

/* Replace pointer cursor in disabled elements */
[disabled] {
  cursor: default;
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
  /* Correct the cursor style of increment and decrement buttons in Chrome */
}

[type=search] {
  -webkit-appearance: textfield;
  /* Correct the odd appearance in Chrome and Safari */
  outline-offset: -2px;
  /* Correct the outline style in Safari */
}

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
  /* Remove the inner padding in Chrome and Safari on macOS */
}

textarea {
  overflow: auto;
  /* Internet Explorer 11+ */
  resize: vertical;
  /* Specify textarea resizability */
}

button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* Specify font inheritance of form elements */
}

optgroup {
  font-weight: bold;
  /* Restore the font weight unset by the previous rule */
}

button {
  overflow: visible;
  /* Address `overflow` set to `hidden` in IE 8/9/10/11 */
}

button,
select {
  text-transform: none;
  /* Firefox 40+, Internet Explorer 11- */
}

/* Apply cursor pointer to button elements */
button,
[type=button],
[type=reset],
[type=submit],
[role=button] {
  cursor: pointer;
  color: inherit;
}

/* Remove inner padding and border in Firefox 4+ */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/* Replace focus style removed in the border reset above */
button:-moz-focusring,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  outline: 1px dotted ButtonText;
}

button,
html [type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
  /* Correct the inability to style clickable types in iOS */
}

/* Remove the default button styling in all browsers */
button,
input,
select,
textarea {
  background-color: transparent;
  border-style: none;
}

a:focus,
button:focus,
input:focus,
select:focus,
textarea:focus {
  outline-width: 0;
}

/* Style select like a standard input */
select {
  -moz-appearance: none;
  /* Firefox 36+ */
  -webkit-appearance: none;
  /* Chrome 41+ */
}

select::-ms-expand {
  display: none;
  /* Internet Explorer 11+ */
}

select::-ms-value {
  color: currentColor;
  /* Internet Explorer 11+ */
}

legend {
  border: 0;
  /* Correct `color` not being inherited in IE 8/9/10/11 */
  color: inherit;
  /* Correct the color inheritance from `fieldset` elements in IE */
  display: table;
  /* Correct the text wrapping in Edge and IE */
  max-width: 100%;
  /* Correct the text wrapping in Edge and IE */
  white-space: normal;
  /* Correct the text wrapping in Edge and IE */
  max-width: 100%;
  /* Correct the text wrapping in Edge 18- and IE */
}

::-webkit-file-upload-button {
  /* Correct the inability to style clickable types in iOS and Safari */
  -webkit-appearance: button;
  color: inherit;
  font: inherit;
  /* Change font properties to `inherit` in Chrome and Safari */
}

/* # =================================================================
   # Specify media element style
   # ================================================================= */
img {
  border-style: none;
  /* Remove border when inside `a` element in IE 8/9/10 */
}

/* Add the correct vertical alignment in Chrome, Firefox, and Opera */
progress {
  vertical-align: baseline;
}

/* # =================================================================
   # Accessibility
   # ================================================================= */
/* Specify the progress cursor of updating elements */
[aria-busy=true] {
  cursor: progress;
}

/* Specify the pointer cursor of trigger elements */
[aria-controls] {
  cursor: pointer;
}

/* Specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements */
[aria-disabled=true] {
  cursor: default;
}

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

:root {
  --aqua: #00c3ff;
  --white: #fff;
}

body {
  font-family: "Roboto Slab", serif;
  font-weight: 700;
  background-color: var(--aqua);
  color: var(--aqua);
}

input {
  font-weight: inherit;
  font-size: inherit;
  line-height: inherit;
  color: inherit;
}

button {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

li {
  list-style: none;
}

.todo__inner {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 20px;
}
.todo__wrapper {
  background-color: var(--white);
  border-radius: 20px;
  padding: 30px;
  -webkit-box-shadow: 0px 0px 30px 10px rgba(34, 60, 80, 0.2);
  box-shadow: 0px 0px 30px 10px rgba(34, 60, 80, 0.2);
}
.todo__header {
  margin-bottom: 40px;
}
.todo__title {
  font-size: 40px;
  margin-bottom: 15px;
  text-align: center;
}
.todo__current-date {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-bottom: 30px;
}
.todo__day {
  font-size: 20px;
  text-transform: uppercase;
}
.todo__time {
  font-size: 20px;
}
.todo__form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 30px;
}
.todo__input {
  font-size: 17px;
  border: 1px solid var(--aqua);
  border-radius: 20px;
  height: 45px;
  width: 400px;
  padding: 0 20px;
}
.todo__input::-webkit-input-placeholder {
  font-size: 20px;
  color: var(--aqua);
}
.todo__input::-moz-placeholder {
  font-size: 20px;
  color: var(--aqua);
}
.todo__input:-ms-input-placeholder {
  font-size: 20px;
  color: var(--aqua);
}
.todo__input::-ms-input-placeholder {
  font-size: 20px;
  color: var(--aqua);
}
.todo__input::placeholder {
  font-size: 20px;
  color: var(--aqua);
}
.todo__button {
  font-size: 20px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 120px;
  height: 45px;
  background-color: var(--aqua);
  color: var(--white);
  border-radius: 20px;
  -webkit-transition: 0.5s;
  transition: 0.5s;
}
.todo__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.todo__item {
  margin-bottom: 15px;
}
.todo__item.is-checked {
  opacity: 0.4;
  -webkit-box-ordinal-group: 3;
  -ms-flex-order: 2;
  order: 2;
}
.todo__item-box {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 5px 20px;
  border-radius: 20px;
  background-color: var(--aqua);
  cursor: pointer;
  -webkit-transition: 0.5s;
  transition: 0.5s;
}
.todo__item-text {
  font-family: "Inconsolata", monospace;
  font-size: 25px;
  font-weight: 300;
  color: var(--white);
  max-width: 360px;
  margin-right: auto;
  word-break: break-all;
  cursor: pointer;
}
.todo__item-day {
  font-family: "Inconsolata", monospace;
  font-size: 19px;
  color: var(--white);
  font-weight: 300;
  margin-left: 10px;
  cursor: pointer;
}
.todo__item-time {
  font-family: "Inconsolata", monospace;
  font-size: 19px;
  color: var(--white);
  font-weight: 300;
  margin-left: 20px;
  cursor: pointer;
}
.todo__checkbox {
  margin-right: 20px;
  cursor: pointer !important;
}
.todo__delete-button {
  width: 36px;
  height: 36px;
  background-color: #cab3cd;
  padding: 10px;
  border-radius: 10px;
  margin-left: 10px;
}
.todo__delete-ico {
  color: var(--white);
  -webkit-transition: 0.5s;
  transition: 0.5s;
  cursor: pointer;
}

@media (hover: hover) {
  .todo__button:hover {
    background-color: #3aa3c4;
  }
  .todo__item-box:hover {
    background-color: #0090ff;
  }
  .todo__delete-button:hover .todo__delete-ico {
    color: #a4edff;
  }
}
@media (max-width: 640px) {
  .todo__form {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 15px;
  }
  .todo__input {
    width: 100%;
  }
}
@media (max-width: 480px) {
  .todo__header {
    margin-bottom: 25px;
  }
  .todo__item-text {
    font-size: 16px;
  }
  .todo__item-time {
    margin-left: 10px;
  }
  .todo__checkbox {
    margin-right: 10px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
